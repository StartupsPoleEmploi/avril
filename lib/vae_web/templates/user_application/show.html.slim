.container.user-application
  h1.title.is-1.has-text-centered Demande de VAE
  .columns
    .column.is-7.is-8-fullhd
      p.subtitle Diplôme demandé :
      h2.title.is-2= Vae.Certification.name(@certification)

    .column.is-5.is-4-fullhd.has-text-right.is-hidden-print
      .field
        button.button.is-primary.is-rounded.is-medium.is-print onclick="window.print();"
          span.fa.fa-print
          |  Imprimer cette page
      = if @application.booklet_1 && @application.booklet_1.completed_at do
        .field
          = link("Télécharger son livret de recevabilité (L1)", to: Routes.user_application_path(VaeWeb.Endpoint, :cerfa, @application, delegate_hash: @application.delegate_access_hash), class: "button is-info is-rounded is-medium")

  section.section style="background: white; margin: 2rem 0;"
    .columns
      .column.is-6
        p.subtitle Le candidat :
        h3.title.is-3 =Vae.Account.fullname(@user)
        .field.is-horizontal
          .field-label.is-normal
            label.label Adresse :
          .field-body
            .field
              .control
                .fake-input= Vae.User.address(@user)
        .field.is-horizontal
          .field-label.is-normal
            label.label Email :
          .field-body
            .field
              .control
                .fake-input= link(@user.email, to: "mailto:#{@user.email}")
        .field.is-horizontal
          .field-label.is-normal
            label.label Tél :
          .field-body
            .field
              .control
                .fake-input
                  = if @user.phone_number do
                    = link(@user.phone_number, to: "tel:#{@user.phone_number}")
                  - else
                    span Non renseigné par le candidat
      .column.is-6
        p.subtitle Le certificateur :
        h3.title.is-3= @delegate.name
        = form_for @delegate_changeset, Routes.delegate_path(@conn, :update, Vae.String.parameterize(@delegate.administrative), Vae.String.parameterize(@delegate.city), @delegate), [class: "form is-togglable"], fn f ->
          = hidden_input f, :hash, value: @application.delegate_access_hash, name: "delegate_hash"
          .field.is-horizontal
            .field-label.is-normal
              label.label Nom du contact :
            .field-body
              .field
                .control
                  = text_input f, :person_name, class: "input", placeholder: "Nom du contact", readonly: true, required: true
          .field.is-horizontal
            .field-label.is-normal
              label.label Adresse :
            .field-body
              .field
                .control
                  = text_input f, :address, class: "input", placeholder: "Adresse", readonly: true, required: true
          .field.is-horizontal
            .field-label.is-normal
              label.label Email :
            .field-body
              .field
                .control
                  = email_input f, :email, class: "input", placeholder: "Email", readonly: true, required: true
          .field.is-horizontal
            .field-label.is-normal
              label.label Tél :
            .field-body
              .field
                .control
                  = telephone_input f, :telephone, class: "input", placeholder: "Tél", readonly: true, required: true
          .field.is-horizontal
            .field-label.is-normal
              label.label Site internet :
            .field-body
              .field
                .control
                  = text_input f, :website, class: "input", placeholder: "https://www.exemple.fr", readonly: true, required: true
          .is-edit-mode
            .field.is-horizontal
              .field-label
              .field-body
                .field
                  .control
                    .buttons style="justify-content: space-between;"
                      = submit "Enregistrer", class: "button is-primary is-rounded"
                      button.button.is-text.is-rounded.toggle-mode Annuler
          .field.is-readonly-mode
            p
              ' Ces coordonnées ne sont plus à jour ? Vous pouvez les
              a.toggle-mode modifier directement ici
              | .

    section.section.is-vertical.is-hidden-print
      h3.title.is-3 Sa recevabilité
      p.subtitle Voici les informations qu'a complété le candidat via Avril, ainsi que les justificatifs qu'il a souhaité joindre.
      .notification
        .content
          ul
            li
              strong
                = link("Livret de recevabilité complété (L1)", to: Routes.user_application_path(VaeWeb.Endpoint, :cerfa, @application, delegate_hash: @application.delegate_access_hash))
            = for resume <- @application.resumes do
              li.document
                = link to: resume.url, class: "download", download: resume.filename, data: [analytics: "CV#download certificateur"] do
                  span.fa.fa-download
                  = resume.filename
    = if length(@user.experiences) > 0 do
      section.section.is-vertical
        h4.title.is-4 Ses expériences professionnelles
        p.subtitle Il s'agit des expériences que le candidat a déclarées dans son espace personnel Pôle emploi. Elles ont donc une valeur indicative.
        .columns.is-multiline
          = for experience <- Enum.reverse(@user.experiences) do
            .column.is-4.is-flex.is-12-print
              .card
                .card-header
                  .title.is-6= experience.company
                .card-content
                  p= experience.label
                  p= render VaeWeb.ComponentView, "date-range.html", conn: @conn, start_date: experience.start_date, end_date: experience.end_date

    = if length(@user.proven_experiences) > 0 do
      section.section.is-vertical
        h4.title.is-4
          | Ses expériences attestées
          = img_tag "/images/pole_emploi.svg", style: "height: 3rem; margin: 0 0.5rem; position: relative; top: 1px;"
          |  des 10 dernières années
        p.subtitle Il s'agit des expériences professionnelles enregistrées dans le dossier informatique Pôle emploi du candidat, relative aux 10 dernières années. Ces expériences ont fait l'objet d'un contrôle et peuvent donc avoir valeur de preuve pour le traitement de la recevabilité
        .columns.is-multiline
          = for {{company_name, label}, experiences} <- @grouped_experiences do
            .column.is-4.is-flex.is-12-print
              .card
                .card-header
                  .title.is-6= company_name
                .card-content.content
                  p
                    = Vae.String.inflect(length(experiences), "expérience")
                    = if label != "Métier indéterminé" do
                      = "en tant que #{label} "
                    '  totalisant #{Enum.sum(Enum.map(experiences, &(&1.work_duration)))} heures
                    = render VaeWeb.ComponentView, "date-range.html", conn: @conn, start_date: Enum.min_by(experiences, &(Date.to_erl(&1.start_date))).start_date, end_date: Enum.max_by(experiences, &(Date.to_erl(&1.end_date))).end_date
                    = " : "
                  ul
                    = for exp <- experiences do
                      li
                        = "#{exp.work_duration} heures en #{exp.contract_type}, "
                        = render VaeWeb.ComponentView, "date-range.html", conn: @conn, start_date: exp.start_date, end_date: exp.end_date

    = if length(@user.skills) > 0 do
      section.section.is-vertical
        h4.title.is-4 Ses compétences
        .content
          ul
            = for skill <- @user.skills do
              li= skill.label