= if length(@certifications) == 0 do
  = render("no-results.html")
- else
  - possible_levels = 1..5 |> Enum.to_list()
  - is_all = possible_levels == @levels
  section.section#title
    .container
      = link("Recherche", to: Routes.root_path(@conn, :index), class: "button is-back")
      = if assigns[:rome] do
        = render Vae.RomeView, "breadcrumbs.html", conn: @conn, assigns: assigns
      h1.title.is-1
        | #{Vae.String.inflect(length(@certifications), "diplôme disponible")} en VAE
        = unless is_all do
          = " #{Vae.String.inflect("au niveau", length(@levels))} #{Enum.map(@levels, &level_info_by_level/1) |> Enum.join(", ")}"
        = if assigns[:profession] do
          |  pour le métier #{@profession.label}
        - else
          = if assigns[:rome] do
            |  pour les métiers #{@rome.label}
      form method="get" class="toggler"
        = for {key, value} <- Map.delete(@conn.query_params, "levels") do
          input type="hidden" name=key value=value
        input type="hidden" name="levels"
        ul
          li
            input type="checkbox" value="all" id="all_levels" checked=is_all
            label.button.is-rounded.is-info.is-togglable for="all_levels"
              | Toutes les équivalences
          = for level <- possible_levels |> Enum.reverse() do
            li
              input type="checkbox" value=level id="level_#{level}" checked=(!is_all && Enum.member?(@levels, level))
              label.button.is-rounded.is-info.is-togglable for="level_#{level}"
                = level_info_by_level(level)
  section.section#results
    .container
      = for {chunk, i} <- Enum.with_index(Enum.chunk_every(@certifications, 3)) do
        .columns
          = for certification <- chunk do
            .column.is-4
              = render Vae.ComponentView, "certification-card.html", conn: @conn, certification: certification
        = if i == 0 do
          .notification.is-green.section
            .columns.content.is-medium
              .column.is-4.is-offset-1
                h2.title.is-2 Comment bien choisir son diplôme
                = link("Bien choisir un diplôme VAE", to: Routes.page_path(@conn, :choose_certification), class: "button is-dark is-rounded is-medium")
              .column.is-6.is-offset-1
                p Apprenez-en plus sur les diplômes disponibles et comment choisir le plus adapté à votre profil, vos expériences et vos compétences.

= render Vae.ComponentView, "pagination.html", conn: @conn, page: @page, path: &Routes.certification_path/3

