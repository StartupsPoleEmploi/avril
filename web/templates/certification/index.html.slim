= if length(@certifications) == 0 do
  = render("no-results.html")
- else
  section.section#title
    .container
      = if assigns[:rome] do
        = render Vae.RomeView, "breadcrumbs.html", conn: @conn, assigns: assigns
      h1.title.is-1
        | Diplômes disponibles en VAE
        = if assigns[:profession] do
          |  pour le métier #{@profession.label}
        - else
          = if assigns[:rome] do
            |  pour les métiers de #{@rome.label}
      p
        form method="get" class="toggler"
          = for {key, value} <- Map.delete(@conn.query_params, "levels") do
            input type="hidden" name=key value=value
          input type="hidden" name="levels"
          - possible_levels = 1..5 |> Enum.to_list()
          - is_all = possible_levels == @levels
          ul
            li
              input type="checkbox" value="all" id="all_levels" checked=is_all
              label.button.is-rounded.is-info.is-togglable for="all_levels"
                | Toutes les équivalences
            = for level <- possible_levels |> Enum.reverse() do
              li
                input type="checkbox" value=level id="level_#{level}" checked=(!is_all && Enum.member?(@levels, level))
                label.button.is-rounded.is-info.is-togglable for="level_#{level}"
                  = level_info_by_level(level)
  section.section#results
    .container
      = for chunk <- Enum.chunk_every(@certifications, 3) do
        .columns
          = for certification <- chunk do
            .column.is-4
              = render Vae.ComponentView, "certification-card.html", conn: @conn, certification: certification

= render Vae.ComponentView, "pagination.html", conn: @conn, page: @page, path: &Routes.certification_path/3

