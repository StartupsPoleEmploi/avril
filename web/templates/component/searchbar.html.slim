= form_for @conn, certification_path(@conn, :index), [as: :search, method: "get", id: "rome_form", class: "dm-search-box d-flex flex-md-row flex-column align-items-stretch text-left"], fn f ->
  .input-group.suggest
    = search_input(f, :profession, class: "form-control form-control-lg", required: true, value: Plug.Conn.get_session(@conn, :search_profession), placeholder: 'Essayez "Boulanger"')
    = hidden_input(f, :rome_code, value: Plug.Conn.get_session(@conn, :search_rome))
  .input-group.geolocation
    = search_input(f, :geolocation_text, class: "form-control form-control-lg", required: true, value: Plug.Conn.get_session(@conn, :search_geo), placeholder: 'Essayez "Paris"')
    = hidden_input(f, :lat, value: Plug.Conn.get_session(@conn, :search_lat))
    = hidden_input(f, :lng, value: Plug.Conn.get_session(@conn, :search_lng))
    = hidden_input(f, :county, value: Plug.Conn.get_session(@conn, :search_county))
    = hidden_input(f, :postcode, value: Plug.Conn.get_session(@conn, :search_postcode))
    = hidden_input(f, :administrative, value: Plug.Conn.get_session(@conn, :search_administrative))
    - disabled_search = is_nil(Plug.Conn.get_session(@conn, :search_lat)) or is_nil(Plug.Conn.get_session(@conn, :search_lng))
    - class_search = if (disabled_search), do: " disabled", else: ""
  = submit class: "btn btn-outline-primary btn-lg d-flex justify-content-center my-md-0 my-2" <> class_search, title: 'Valider la recherche', disabled: disabled_search do
    span.ic-icon.ic-zoom-bold
= render Vae.ComponentView, "places", conn: @conn, prefix: "search", tag: "geolocation_text", type: "city"

javascript:
  var client = algoliasearch('VKO8QTO21W', '95ab665ab87f69716aeed890c795d816');
  var romes = client.initIndex('rome');
  autocomplete('#search_profession', {
    autoselect: true,
    autoselectOnBlur: true,
    debug: true,
    cssClasses: {
      prefix: 'ap'
    }
  }, [{
    source: autocomplete.sources.hits(romes, { hitsPerPage: 3 }),
    displayKey: 'label',
    templates: {
      suggestion: function(suggestion) {
        return suggestion._highlightResult.label.value;
      }
    }
  }]).on('autocomplete:selected', function(event, suggestion, dataset) {
    $('#search_rome_code').val(suggestion.code)
    // todo check geoloc pareil dans places
    $('.dm-search-box button').removeClass('disabled')
    $('.dm-search-box button').removeAttr('disabled')
  });
