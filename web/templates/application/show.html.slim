.user-profile
  .row.my-4
    .col-md-6.my-auto
      p Diplôme demandé :
      h3.mb-4= Vae.Certification.name(@certification)
    .col-md-6.my-auto
      .pull-right
        = render Vae.ComponentView, "delegate_infos.html", delegate: @delegate
  .jumbotron
    = if length(@tabs) > 1 do
      .row
        .col-md-12
          nav.mb-5
            .nav.nav-pills.nav-fill role="tablist"
              = for {tab, i} <- @tabs |> Enum.with_index() do
                  = if tab == :profile do
                    a#profile-tab.nav-item.nav-link.active href="#profile" data-toggle="tab" aria-controls="profile" aria-selected="true"
                      h6
                        span.fa.fa-user
                        = " #{i+1} - Mon profil"
                  = if tab == :meetings do
                    a#meetings-tab.nav-item.nav-link href="#meetings" data-toggle="tab" aria-controls="meetings" aria-selected="false" data-analytics="Profil#transmission tab"
                      h6
                        span.fa.fa-calendar
                        = " #{i+1} - Mon entretien"
                  = if tab == :booklet do
                    a#booklet-tab.nav-item.nav-link href="#booklet" data-toggle="tab" aria-controls="booklet" aria-selected="false"
                      h6
                        span.fa.fa-folder
                        = " #{i+1} - Mon dossier de candidature"

    .tab-content
      = if Enum.member?(@tabs, :profile) do
        #profile.tab-pane.fade.show.active role="tabpanel" aria-labelledby="profile-tab"
          .row
            .col-md-12.mb-4
              = if !@user.first_name && !@user.last_name do
                .alert.alert-secondary
                  | Nous vous invitons à remplir vos coordonnées, et si vous l'avez sous la main, à nous envoyer votre CV pour que ces informations soient transmises au centre VAE.
            .col-md-6
              = form_for @user_changeset, Routes.user_path(@conn, :update, @user), [class: "profile-edit", data: [analytics: "Profil#modifier coordonnees"]], fn f ->
                .row
                  = if @edit_mode do
                    .col
                      .form-group
                        = text_input f, :first_name, class: "form-control form-control-lg", placeholder: "Prénom", disabled: @user.first_name, required: true
                        = error_tag f, :first_name
                    .col
                      .form-group
                        = text_input f, :last_name, class: "form-control form-control-lg", placeholder: "Nom de famille", disabled: @user.last_name, required: true
                        = error_tag f, :last_name
                  - else
                    .col
                      h4.my-4
                        | Le candidat :&nbsp;
                        strong #{@user.first_name} #{@user.last_name}
                .row
                  .col
                    .form-group
                      = if @edit_mode do
                        = text_input f, :email, class: "form-control", placeholder: "Email", disabled: @user.email, required: true
                        = error_tag f, :email
                      - else
                        = link(@user.email, to: "mailto:#{@user.email}")
                .row
                  .col
                    .form-group
                      = if @edit_mode do
                        - phone_highlight = @user.pe_id && !@user.phone_number
                        = telephone_input f, :phone_number, class: "form-control #{if phone_highlight, do: "form-highlight"}", placeholder: "Saisissez votre numéro de téléphone", disabled: @user.phone_number, autofocus: phone_highlight, required: true, pattern: "[0-9]{2} [0-9]{2} [0-9]{2} [0-9]{2} [0-9]{2}", data: [analytics: "Profil#ajouter tel"]
                        = error_tag f, :phone_number
                      - else
                        = if @user.phone_number do
                          = link(@user.phone_number, to: "tel:#{@user.phone_number}")
                        - else
                          p Téléphone non renseigné par le candidat
                .row
                  .col
                    .form-group
                      = if @edit_mode do
                        = date_input f, :birthday, class: "form-control", placeholder: "Date de naissance", disabled: @user.birthday, required: true
                        = error_tag f, :birthday
                  .col
                    .form-group
                      = if @edit_mode do
                        = text_input f, :birth_place, class: "form-control", placeholder: "Lieu de naissance", disabled: @user.birth_place, required: true
                        = error_tag f, :birth_place
                .row
                  .col
                    .form-group.address-component.mb-1
                      .input-group
                        = text_input f, :address4, class: "form-control", placeholder: "Voie", disabled: Vae.User.address_street(@user)
                        .input-group-append
                          button class="btn btn-outline-secondary btn-sm toggle-address" type="button" title="Préciser l'adresse" disabled="disabled" +
                      = error_tag f, :address4
                    .form-group.address-component.mb-1 class="#{if is_nil(@user.address3), do: "d-none", else: ""}"
                      = text_input f, :address3, class: "form-control", placeholder: "Complément de distribution", disabled: true
                      = error_tag f, :address3
                    .form-group.address-component.mb-1 class="#{if is_nil(@user.address2), do: "d-none", else: ""}"
                      = text_input f, :address2, class: "form-control", placeholder: "Complément d'adresse", disabled: true
                      = error_tag f, :address2
                    .form-group.address-component.mb-1 class="#{if is_nil(@user.address1), do: "d-none", else: ""}"
                      = text_input f, :address1, class: "form-control", placeholder: "Complément destinataire", disabled: true
                      = error_tag f, :address1
                .row
                  .col-3.pr-0
                    .form-group.mb-1
                      = text_input f, :postal_code, class: "form-control", placeholder: "Code postal", disabled: @user.postal_code
                      = error_tag f, :postal_code
                  .col-9
                    .form-group.mb-1
                      = text_input f, :city_label, class: "form-control", placeholder: "Commune", disabled: @user.city_label
                      = error_tag f, :city_label
                .row
                  .col
                    .form-group.mb-4
                      = text_input f, :country_label, class: "form-control", placeholder: "Pays", disabled: @user.country_label
                      = error_tag f, :country_label
                = if @edit_mode do
                  .row
                    .col
                      .form-group
                        a.btn.btn-link.btn-sm.edit-button href="#"
                          span.fa.fa-edit
                          |  Modifier mes coordonnées
                        .d-none.save
                          = reset "Annuler", class: "btn btn-default btn-sm reset"
                          = submit "Enregistrer", class: "btn btn-primary btn-sm pull-right"
              .row
                .col
            = if length(@meetings) == 0 || @application.submitted_at do
              .col-md-6.text-right
                = render Vae.ComponentView, "call-to-action.html", conn: @conn, application: @application, edit_mode: @edit_mode, meetings: @meetings
          .row.mb-5.resume-section
            .col-md-12
              h3.my-4 #{if @edit_mode, do: "Mes", else: "Ses"} CVs
              p
                | Profitez de cet espace pour transmettre votre CV au centre VAE pour qu'il vous connaisse mieux.
                span.disabled= " (Cette étape est facultative.)"
            .col-md-12
              = if @edit_mode || length(@application.resumes) > 0 do
                .jumbotron.bg-light
                  ul.list-inline
                    = for resume <- @application.resumes do
                      li.list-inline-item.rounded.resume-block
                        = link to: resume.url, class: "download", data: [analytics: (if @edit_mode, do: "CV#download candidat", else: "CV#download certificateur")] do
                          div
                            span.fa.fa-download
                            p= resume.filename
                        = link to: Routes.application_resume_path(@conn, :delete, @application, resume), method: :delete, data: [confirm: "Confirmez-vous la suppression du CV ?", analytics: "CV#delete"], class: "remove", data: [disable: true] do
                          span.fa.fa-trash
                    = if @edit_mode do
                      li.list-inline-item.rounded.resume-block.upload-block
                        = form_for @resume_changeset, Routes.application_resume_path(@conn, :create, @application), [multipart: true, method: :post, class: "resume-upload", data: [analytics: "CV#upload"]], fn f ->
                          label.file-upload-zone for="resume"
                            div
                              span.fa.fa-upload
                              p.label Ajouter un CV
                            = file_input f, :file, class: "form-control-file", id: "resume", required: true
                          = submit "Envoyer", class: "btn btn-primary btn-sm", disabled: 'disabled', data: ["disable-with": "Envoi ..."]
              - else
                p Le candidat n'a pas encore déposé de CV.


          = if length(@user.experiences) > 0 do
            .row.mb-5
              .col-sm-12.mb-3
                h3 #{if @edit_mode, do: "Mes", else: "Ses"} expériences professionnelles
                = unless @edit_mode do
                  p Il s'agit des expériences que le candidat a déclarées dans son espace personnel Pôle emploi. Elles ont donc une valeur indicative.
              = for experience <- Enum.reverse(@user.experiences) do
                .col-md-4.mb-4
                  .card
                    .card-body
                      strong= experience.company
                      = " : #{experience.label}"
                      '
                      = render Vae.ComponentView, "date-range.html", conn: @conn, start_date: experience.start_date, end_date: experience.end_date

          = if length(@user.proven_experiences) > 0 do
            .row.mb-5
              .col-sm-12.mb-3
                h3
                  | #{if @edit_mode, do: "Mes", else: "Ses"} expériences attestées
                  = unless @edit_mode do
                    = img_tag "/images/pole_emploi.svg", style: "height: 3rem; margin: 0 20px; position: relative; top: 1px;"
                  |  des 10 dernières années
                = unless @edit_mode do
                  p Il s'agit des expériences professionnelles enregistrées dans le dossier informatique Pôle emploi du candidat, relative aux 10 dernières années. Ces expériences ont fait l'objet d'un contrôle et peuvent donc avoir valeur de preuve pour le traitement de la recevabilité
              = for {{company_name, label}, experiences} <- @grouped_experiences do
                .col-md-6.mb-4
                  .card
                    .card-body
                      strong= company_name
                      = " : #{length(experiences)} #{Inflex.inflect("expérience", length(experiences))} "
                      = if label != "Métier indéterminé" do
                        = "en tant que #{label} "
                      = "totalisant #{Enum.sum(Enum.map(experiences, &(&1.work_duration)))} heures "
                      = render Vae.ComponentView, "date-range.html", conn: @conn, start_date: Enum.min_by(experiences, &(Date.to_erl(&1.start_date))).start_date, end_date: Enum.max_by(experiences, &(Date.to_erl(&1.end_date))).end_date
                      = " : "
                      ul
                        = for exp <- experiences do
                          li
                            = "#{exp.work_duration} heures en #{exp.contract_type}, "
                            = render Vae.ComponentView, "date-range.html", conn: @conn, start_date: exp.start_date, end_date: exp.end_date

          = if length(@user.skills) > 0 do
            .row.mb-5
              .col-sm-12
                h3 #{if @edit_mode, do: "Mes", else: "Ses"} compétences

                ul
                  = for skill <- @user.skills do
                    li= skill.label

          = if (length(@user.skills) + length(@user.experiences) + length(@user.proven_experiences)) + length(@meetings) > 0 do
            .text-center.mb-4
              = render Vae.ComponentView, "call-to-action.html", conn: @conn, application: @application, edit_mode: @edit_mode, meetings: @meetings
          = if length(@meetings) > 0 && is_nil(@application.submitted_at) do
            .text-right
              = button "Non merci, je veux juste transmettre mon dossier VAE", to: Routes.application_path(@conn, :update, @application), method: "put", class: "btn btn-link", data: [analytics: "Profil#Sans Reunion information"], name: "book", value: "off"
      = if Enum.member?(@tabs, :profile) do
        #meetings.tab-pane.fade role="tabpanel" aria-labelledby="meetings-tab"
          .row
            .col-sm-8.offset-sm-2.text-center.my-5
              h3 Nous avons trouvé plusieurs ateliers collectifs près de chez vous !
          = form_for @application_changeset, Routes.application_path(@conn, :update, @application), [class: "select-meeting", data: [analytics: "?bouton=soumettre-candidature"]], fn f ->
            .row
              .col-sm-8.offset-sm-2
                p.mb-5 C'est l'occasion de rencontrer un conseiller et un groupe de candidats qui comme vous ont choisi la VAE. Le conseiller vous expliquera le parcours VAE pour votre diplôme et vous donnera des conseils qui seront la clé de votre réussite.
                p.text-center.mb-5 Choisissez celui auquel vous souhaitez participer :
            .row
              .col-sm-12
                .text-center
                  h3 Où ?
                ul.nav.flex-column
                  = for {{place, address, slug} = place_infos, meetings} <- @meetings do
                    li.card.meeting-card.place.nav-item id="tab-#{slug}" class="#{if @preselected_place && @preselected_place != place_infos, do: "d-none"}"
                      .card-body.nav-link data-target="#place-#{slug}" data-toggle="tab" aria-controls="place-#{slug}" class="#{if place_infos == @preselected_place, do: "active"}"
                        div
                          h5.strong
                            = place
                            small= " (#{length(meetings)} #{Inflex.inflect("date", length(meetings))} #{Inflex.inflect("disponible", length(meetings))})"
                          p= address
                = if @preselected_place && (length(@meetings) - 1 > 0) do
                  .text-right
                    a.btn.btn-link.show-hidden-meetings href="#"
                      = if length(@meetings) - 1 == 1 do
                        = "Voir l'autre lieu disponible"
                      - else
                        = "Voir les #{length(@meetings) - 1} autres lieux disponibles"

            .row id="when"
              .col-sm-12
                .tab-content
                  h3.text-center Quand ?
                  = for {{_place, _address, slug} = place_infos, meetings} <- @meetings do
                    div.tab-pane.fade role="tabpanel" aria-labelledby="tab-#{slug}" id="place-#{slug}" class="#{if place_infos == @preselected_place, do: "show active"}"
                      = select(f, :meeting_id, Enum.map(meetings, fn meeting -> [value: meeting.meeting_id2, key: "#{String.capitalize(Timex.lformat!(meeting.start_date, "%A %e %B ", "fr", :strftime))} de #{Timex.lformat!(meeting.start_date, "%H:%M", "fr", :strftime)} à #{Timex.lformat!(meeting.end_date, "%H:%M", "fr", :strftime)} #{if meeting.remaining_places <= 20, do: "(#{meeting.remaining_places} places disponibles)"}"] end), class: "custom-select custom-select-lg date-select", id: "select-#{slug}", disabled: place_infos != @preselected_place)
            .row
              .col-sm-12.text-center.my-5
                button.btn.btn-primary type="submit" name="book" value="on" disabled=!@preselected_place data-analytics="Profil#Avec Reunion information"
                  span.fa.fa-plus-circle
                  = if @application.submitted_at, do: " Réserver ma place", else: " Réserver ma place et transmettre mon dossier"
            = unless @application.submitted_at do
              .row
                .col-sm-12
                  .pull-right
                    button.btn.btn-link type="submit" name="book" value="off" data-analytics="Profil#Sans Reunion information" Non merci, je veux juste transmettre mon dossier VAE
      = if Enum.member?(@tabs, :profile) do
        #booklet.tab-pane.fade role="tabpanel" aria-labelledby="booklet-tab"
          = if @application.booklet_1 && @application.booklet_1.completed_at do
            .row
              .col-sm-8.offset-2
                h3.text-center Par ici la suite !

                p Bravo ! Vous avez finalisé votre dossier de recevabilité.
                p Il n’y a plus qu’à le transmettre.

                ol
                  li
                    a href="#{Vae.Application.booklet_url(@application, '/cerfa')}" class="btn btn-link" target="_blank"
                      | Téléchargez votre dossier
                    |  puis imprimez-le.
                  li N’oubliez pas de dater et signer le document à la fin.
                  li Rassemblez les pièces justificatives, voir liste ci-après.
                  li
                    | Envoyez le tout par voie postale à :
                    br
                    strong #{@application.delegate.name}
                    br
                    = @application.delegate.address
                p Vous recevrez la réponse sous 2 mois maximum. Sachez que la loi stipule qu’une non-réponse au bout de 2 mois vaut accord, si votre dossier était complet.

                hr style="margin: 3rem;"

                h4 Documents à fournir (photocopies, pas besoin de fournir les originaux) :
                ul
                  li Photocopie de carte nationale d’identité ou de passeport, en cours de validité ou périmés depuis moins de 5 ans
                  li Justificatif pour toutes les formations, ou diplômes que vous avez cités dans votre dossier
                  li Pour les emplois salariés, l’attestation employeur ou le contrat de travail avec vos fiches de paie
                  li Si vous avez des emplois non-salariés, l’attestation d’inscription auprès des organismes habilités et les justificatifs de la durée de cette inscription (registre du commerce ou des sociétés, registre des métiers, URSSAF ou tout autre document pouvant attester de votre activité professionnelle indépendante).

                = link("Voir l’ensemble des justificatifs pour toutes les situations", to: Routes.page_path(@conn, :receipts), class: "btn btn-link")
          - else
            .row
              .col-sm-8.offset-2
                p Le dossier de candidature permet au certificateur de vérifier que vous avez bien 1 an d'expérience. Il permet aussi de vérifier que cette expérience a bien un lien avec votre futur diplôme.
                p Et enfin, grâce aux renseignements demandés, le certificateur pourra vous donner son avis sur votre projet, c'est à dire qu'il pourra se prononcer sur la recevabilité de votre demande.
            .row style="margin-top: 2rem;"
              .col-sm-12.text-center
                a href=Vae.Application.booklet_url(@application) class="btn btn-md btn-primary"
                  = if @application.booklet_1 do
                    | Modifier mon dossier de candidature
                  - else
                    | Démarrer mon dossier de candidature

