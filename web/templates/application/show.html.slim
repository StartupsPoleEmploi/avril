.user-profile
  .row.my-4
    .col-md-6.my-auto
      h3.my-4 #{@certification.acronym} #{@certification.label}
    .col-md-6.my-auto
      .delegate
        div.mr-3 style="display: inline-block;font-size: 2rem;vertical-align: super;"
          span.ic-icon.ic-tail-right
        = img_tag "/images/conseillere.svg", style: "width: 2.5em; vertical-align: initial;margin-right: 5px; margin-right: 15px", alt: "Votre conseillère VAE"
        p style="display: inline-block"
          strong
            = @delegate.name
          br
          = @delegate.address
  .jumbotron
    .row
      = unless @edit_mode do
        .col-md-12
          h3.my-4 Le Candidat
      .col-md-6
        = form_for @user_changeset, user_path(@conn, :update, @user), [class: "profile-edit"], fn f ->
          .row
            .col
              .form-group.mb-4
                = if @edit_mode do
                  = text_input f, :email, class: "form-control font-weight-bold", placeholder: "Email", disabled: true, required: true
                  = error_tag f, :email
                - else
                  h4= @user.name
                  = link(@user.email, to: "mailto:#{@user.email}")
          .row
            .col
              .form-group.address-component.mb-0
                .input-group
                  = text_input f, :address4, class: "form-control", placeholder: "Voie", disabled: true
                  .input-group-append
                    button class="btn btn-outline-secondary btn-sm toggle-address" type="button" title="Préciser l'adresse" disabled="disabled" +
                = error_tag f, :address4
              .form-group.address-component.mb-0 class="#{if is_nil(@user.address3), do: "d-none", else: ""}"
                = text_input f, :address3, class: "form-control", placeholder: "Complément de distribution", disabled: true
                = error_tag f, :address3
              .form-group.address-component.mb-0 class="#{if is_nil(@user.address2), do: "d-none", else: ""}"
                = text_input f, :address2, class: "form-control", placeholder: "Complément d'adresse", disabled: true
                = error_tag f, :address2
              .form-group.address-component.mb-0 class="#{if is_nil(@user.address1), do: "d-none", else: ""}"
                = text_input f, :address1, class: "form-control", placeholder: "Complément destinataire", disabled: true
                = error_tag f, :address1
          .row
            .col-3.pr-0
              .form-group.mb-0
                = text_input f, :postal_code, class: "form-control", placeholder: "Code postal", disabled: true
                = error_tag f, :postal_code
            .col-9
              .form-group.mb-0
                = text_input f, :city_label, class: "form-control", placeholder: "Commune", disabled: true
                = error_tag f, :city_label
          .row
            .col
              .form-group.mb-4
                = text_input f, :country_label, class: "form-control", placeholder: "Pays", disabled: true
                = error_tag f, :country_label
          = if @edit_mode do
            .row
              .col
                .form-group
                  a.btn.btn-link.btn-sm.edit-button href="#" data-analytics="Profil#modifier coordonnees"
                    span.fa.fa-edit
                    |  Modifier mes coordonnées
                  .d-none.save
                    = submit "Enregistrer", class: "btn btn-primary btn-sm"
                    = reset "Annuler", class: "btn btn-default btn-sm pull-right reset"
        .row
          .col
      .col-md-6.text-right
        = if @edit_mode do
          = render Vae.ComponentView, "submit-button.html", conn: @conn, application: @application, edit_mode: @edit_mode

    .row.mb-5
      .col-md-12
        h3.my-4 #{if @edit_mode, do: "Mon", else: "Son"} CV
      .col-md-12
        .jumbotron.bg-light
          ul.list-inline
            = for resume <- @application.resumes do
              li.list-inline-item.rounded.resume-block
                = link to: resume.url, class: "download" do
                  .content
                    span.fa.fa-download
                    p= resume.filename
                = link to: application_resume_path(@conn, :delete, @application, resume), method: :delete, "data-confirm": "Confirmez-vous la suppression du CV ?", class: "remove" do
                  span.fa.fa-trash
            = if @edit_mode do
              li.list-inline-item.rounded.resume-block.upload-block
                = form_for @resume_changeset, application_resume_path(@conn, :create, @application), [multipart: true, method: :post], fn f ->
                  label.file-upload-zone for="resume"
                    div
                      span.fa.fa-upload
                      p.label Ajouter un CV
                    = file_input f, :file, class: "form-control-file", id: "resume"
                  = submit "Envoyer", class: "btn btn-primary btn-sm", disabled: 'disabled'
              javascript:
                $('input[type="file"').on('change', function(e){
                  var $form = $(e.target).parents('form');
                  if (e.target.files.length) {
                    $form.find('.label').text(e.target.files[0].name);
                    $form.find('button[type=submit]').removeAttr('disabled');
                  } else {
                    $form.find('button[type=submit]').addClass('disabled');
                  }
                });

    = if length(@user.experiences) > 0 do
      .row
        .col
          h3 #{if @edit_mode, do: "Mes", else: "Ses"} expériences professionnelles
      .row.mb-5
        = for experience <- Enum.reverse(@user.experiences) do
          .col-md-4.mb-4
            .card
              .card-body
                strong= experience.company
                = " : #{experience.label}"
                '
                = render Vae.ComponentView, "date-range.html", conn: @conn, start_date: experience.start_date, end_date: experience.end_date

    = if length(@user.proven_experiences) > 0 do
      .row
        .col
          h3 #{if @edit_mode, do: "Mes", else: "Ses"} expériences attestées des 10 dernières années
      .row.mb-5
        = for {{company_name, label}, experiences} <- @grouped_experiences do
          .col-md-6.mb-4
            .card
              .card-header data-toggle="collapse" data-target="#exp-#{Vae.String.parameterize(label)}-#{Vae.String.parameterize(company_name)}" style="cursor: pointer;"
                strong= company_name
                = " : #{length(experiences)} #{Inflex.inflect("expérience", length(experiences))} "
                = if label != "Métier indéterminé" do
                  = "en tant que #{label} "
                = "totalisant #{Enum.sum(Enum.map(experiences, &(&1.duration)))} heures "
                = render Vae.ComponentView, "date-range.html", conn: @conn, start_date: Enum.min_by(experiences, &(Date.to_erl(&1.start_date))).start_date, end_date: Enum.max_by(experiences, &(Date.to_erl(&1.end_date))).end_date
                small
                  = " (détails "
                  span.ic-icon.ic-small-triangle-down style="vertical-align: middle;"
                  | )
              .card-body.collapse id="exp-#{Vae.String.parameterize(label)}-#{Vae.String.parameterize(company_name)}"
                ul
                  = for exp <- experiences do
                    li
                      = "#{exp.duration} heures en #{exp.contract_type}, "
                      = render Vae.ComponentView, "date-range.html", conn: @conn, start_date: exp.start_date, end_date: exp.end_date

    = if length(@user.skills) > 0 do
      .row
        .col
          h3 #{if @edit_mode, do: "Mes", else: "Ses"} compétences
      .row.mb-5
        = for skill <- @user.skills do
          .col-sm-4.mb-4
            .card
              .card-body= skill.label

    = if @edit_mode && (length(@user.skills) + length(@user.experiences) + length(@user.proven_experiences)) > 0 do
      .row.mb-5.text-center
        = render Vae.ComponentView, "submit-button.html", conn: @conn, application: @application, edit_mode: @edit_mode

  = if @edit_mode do
    javascript:
      $('.profile-edit').on('click', '.edit-button', function(e){
        $(e.delegateTarget).find('[disabled]').removeAttr('disabled').addClass('disablable')
        $('.save').removeClass('d-none')
        $('.edit-button').hide();
      })

      $('.profile-edit').on('click', '.reset', function(e){
        $(e.delegateTarget).find('.disablable').attr('disabled', 'disabled').removeClass('disablable')
        $('.save').addClass('d-none')
        $('.edit-button').show();
      });

      $('.profile-edit').on('click', '.toggle-address', function(e){
        var $target = $(e.target);
        if ($target.text() === '+') {
          $(e.target).text('-')
          $(e.delegateTarget).find('.address-component').removeClass('d-none')
        } else {
          $(e.target).text('+')
          $(e.delegateTarget)
            .find('.address-component')
            .filter(function(i, el){ return !$(el).find('input').val() })
            .addClass('d-none')
        }
      });
